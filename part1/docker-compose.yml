# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker-compose build
#      Start app: docker-compose up app
# Start database: docker-compose up db
# Run migrations: docker-compose run migrate
#       Stop all: docker-compose down (add -v to wipe db)
#
version: '3.7'

volumes:
  db_data:

x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-debug}
  
services:
  app:
    image: outdoor_gym_api:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    env_file:
      - .env.production
    depends_on:
      - db
    ports:
      - '8080:8080'
    # user: '0' # uncomment to run as root for testing purposes even though Dockerfile defines 'vapor' user.
    command: ["serve", "--hostname", "0.0.0.0", "--port", "8080"]
  migrate:
    image: outdoor_gym_api:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    env_file:
      - .env.production
    depends_on:
      - db
    command: ["migrate", "--yes"]
    deploy:
      replicas: 0
  revert:
    image: outdoor_gym_api:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    env_file:
      - .env.production
    depends_on:
      - db
    command: ["migrate", "--revert", "--yes"]
    deploy:
      replicas: 0
  db:
    image: postgres:16-alpine
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env.production
    ports:
      - '5432:5432'
